set serveroutput on;




DECLARE 
   
    V_MAIN_QUERY VARCHAR2 (4000) := 'SELECT
    REG_ECOSYSTEM_NAME OPTION_VALUE, REG_ECOSYSTEM_ID OPTION_ID FROM CCD_REG_ECOSYSTEMS where REG_ECOSYSTEM_ID IN
    (
        SELECT DISTINCT REG_ECOSYSTEM_ID
        FROM
        (SELECT REG_ECOSYSTEM_ID FROM CCD_REG_ECOSYSTEMS where (:SHOW_FILT_LIST = ''Y'' AND APP_SHOW_OPT_YN = ''Y'') OR (:SHOW_FILT_LIST IS NULL)

        UNION
        SELECT REG_ECOSYSTEM_ID from CCD_LEG_ECOSYSTEMS where CRUISE_LEG_ID IN (:PK_ID)
        [[QUERY_FRAG]])
    )
    ORDER BY UPPER(REG_ECOSYSTEM_NAME)';

    V_QUERY_FRAG VARCHAR2 (4000) := 'UNION SELECT REG_ECOSYSTEM_ID FROM CCD_REG_ECOSYSTEMS where REG_ECOSYSTEM_ID IN ([[OPTION_IDS]])';
    
    V_INCL_OPTION_IDS VARCHAR2(2000) := '11:6';
    V_FILT_ENABLED_YN CHAR(1) := 'Y';
    
    V_PRIM_KEY_VAL PLS_INTEGER := 34;

BEGIN

    DBMS_OUTPUT.PUT_LINE ('running CCD_CRUISE_PKG.UPDATE_FIL_SHUTTLE_OPTIONS_SP test case');


    CCD_CRUISE_PKG.UPDATE_FIL_SHUTTLE_OPTIONS_SP (V_MAIN_QUERY, V_QUERY_FRAG, TO_CHAR(V_INCL_OPTION_IDS), V_FILT_ENABLED_YN, TO_NUMBER(V_PRIM_KEY_VAL), FALSE);

    DBMS_OUTPUT.PUT_LINE ('the procedure was successful');

END;
/






DECLARE 
   
    V_MAIN_QUERY VARCHAR2 (4000) := 'SELECT
    REG_ECOSYSTEM_NAME OPTION_VALUE, REG_ECOSYSTEM_ID OPTION_ID FROM CCD_REG_ECOSYSTEMS where REG_ECOSYSTEM_ID IN
    (
        SELECT DISTINCT REG_ECOSYSTEM_ID
        FROM
        (SELECT REG_ECOSYSTEM_ID FROM CCD_REG_ECOSYSTEMS where (:SHOW_FILT_LIST = ''Y'' AND APP_SHOW_OPT_YN = ''Y'') OR (:SHOW_FILT_LIST IS NULL)

        UNION
        SELECT REG_ECOSYSTEM_ID from CCD_LEG_ECOSYSTEMS where CRUISE_LEG_ID IN (:PK_ID)
        [[QUERY_FRAG]])
    )
    ORDER BY UPPER(REG_ECOSYSTEM_NAME)';

    V_QUERY_FRAG VARCHAR2 (4000) := 'UNION SELECT REG_ECOSYSTEM_ID FROM CCD_REG_ECOSYSTEMS where REG_ECOSYSTEM_ID IN ([[OPTION_IDS]])';
    
    V_INCL_OPTION_IDS VARCHAR2(2000) := NULL;
    V_FILT_ENABLED_YN CHAR(1) := 'Y';
    
    V_PRIM_KEY_VAL PLS_INTEGER := 4;

BEGIN

    DBMS_OUTPUT.PUT_LINE ('running CCD_CRUISE_PKG.UPDATE_FIL_SHUTTLE_OPTIONS_SP test case');


    CCD_CRUISE_PKG.UPDATE_FIL_SHUTTLE_OPTIONS_SP (V_MAIN_QUERY, V_QUERY_FRAG, TO_CHAR(V_INCL_OPTION_IDS), V_FILT_ENABLED_YN, TO_NUMBER(V_PRIM_KEY_VAL), FALSE);

    DBMS_OUTPUT.PUT_LINE ('the procedure was successful');

END;
/






DECLARE 
   
    V_MAIN_QUERY VARCHAR2 (4000) := 'SELECT
    REG_ECOSYSTEM_NAME OPTION_VALUE, REG_ECOSYSTEM_ID OPTION_ID FROM CCD_REG_ECOSYSTEMS where REG_ECOSYSTEM_ID IN
    (
        SELECT DISTINCT REG_ECOSYSTEM_ID
        FROM
        (SELECT REG_ECOSYSTEM_ID FROM CCD_REG_ECOSYSTEMS where (:SHOW_FILT_LIST = ''Y'' AND APP_SHOW_OPT_YN = ''Y'') OR (:SHOW_FILT_LIST IS NULL)

        UNION
        SELECT REG_ECOSYSTEM_ID from CCD_LEG_ECOSYSTEMS where CRUISE_LEG_ID IN (:PK_ID)
        [[QUERY_FRAG]])
    )
    ORDER BY UPPER(REG_ECOSYSTEM_NAME)';

    V_QUERY_FRAG VARCHAR2 (4000) := 'UNION SELECT REG_ECOSYSTEM_ID FROM CCD_REG_ECOSYSTEMS where REG_ECOSYSTEM_ID IN ([[OPTION_IDS]])';
    
    V_INCL_OPTION_IDS VARCHAR2(2000) := NULL;
    V_FILT_ENABLED_YN CHAR(1) := NULL;
    
    V_PRIM_KEY_VAL PLS_INTEGER := 4;

BEGIN

    DBMS_OUTPUT.PUT_LINE ('running CCD_CRUISE_PKG.UPDATE_FIL_SHUTTLE_OPTIONS_SP test case');


    CCD_CRUISE_PKG.UPDATE_FIL_SHUTTLE_OPTIONS_SP (V_MAIN_QUERY, V_QUERY_FRAG, TO_CHAR(V_INCL_OPTION_IDS), V_FILT_ENABLED_YN, TO_NUMBER(V_PRIM_KEY_VAL), FALSE);

    DBMS_OUTPUT.PUT_LINE ('the procedure was successful');

END;
/